{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","timerId","state","time","hasClock","clockName","hideClock","event","preventDefault","setState","showClock","updateTime","toUTCString","console","info","updateClockName","newClockName","debug","document","addEventListener","this","window","setInterval","removeEventListener","clearInterval","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAIA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GASX,IAAMK,EAAb,4MACEC,QAAyB,KAD3B,EAGEC,MAAe,CACbC,KAAM,GACNC,UAAU,EACVC,UAAW,IANf,EA2BEC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKC,SAAS,CAAEL,UAAU,KA7B9B,EAgCEM,UAAY,WACV,EAAKD,SAAS,CAAEL,UAAU,KAjC9B,EAoCEO,WAAa,WACX,IACMR,GADQ,IAAIP,MACCgB,cAAcb,OAAO,IAAK,GAE7Cc,QAAQC,KAAKX,GAEb,EAAKM,SAAS,CAAEN,UA1CpB,EA6CEY,gBAAkB,WAChB,IAAMC,EAAetB,IAErBmB,QAAQI,MAAR,uBAA8B,EAAKf,MAAMG,UAAzC,eAAyDW,IAEzD,EAAKP,SAAS,CAAEJ,UAAWW,KAlD/B,uDASE,WACEE,SAASC,iBAAiB,cAAeC,KAAKd,WAC9CY,SAASC,iBAAiB,QAASC,KAAKV,WAExCU,KAAKT,aACLS,KAAKnB,QAAUoB,OAAOC,YAAYF,KAAKT,WAAY,KACnDU,OAAOC,YAAYF,KAAKL,gBAAiB,QAf7C,kCAkBE,WACEG,SAASK,oBAAoB,cAAeH,KAAKd,WACjDY,SAASK,oBAAoB,QAASH,KAAKV,WAEvCU,KAAKnB,SACPuB,cAAcJ,KAAKnB,WAvBzB,oBAqDE,WACE,MAAsCmB,KAAKlB,MAAnCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,UAExB,OACE,sBAAKoB,UAAU,MAAf,UACE,6CACA,8BACGrB,GACC,gCACE,iCAASC,IACR,YACAF,cAhEf,GAAyBuB,IAAMC,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.28a46455.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  time: string;\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  timerId: number | null = null;\n\n  state: State = {\n    time: '',\n    hasClock: true,\n    clockName: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.updateTime();\n    this.timerId = window.setInterval(this.updateTime, 1000);\n    window.setInterval(this.updateClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  updateTime = () => {\n    const today = new Date();\n    const time = today.toUTCString().slice(-12, -4);\n\n    console.info(time);\n\n    this.setState({ time });\n  };\n\n  updateClockName = () => {\n    const newClockName = getRandomName();\n\n    console.debug(`Renamed from ${this.state.clockName} to ${newClockName}`);\n\n    this.setState({ clockName: newClockName });\n  };\n\n  render() {\n    const { time, hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          {hasClock && (\n            <div>\n              <strong>{clockName}</strong>\n              {' time is '}\n              {time}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}